{"ast":null,"code":"import _objectSpread from \"/home/evaldas/Desktop/Programming/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/evaldas/Desktop/Programming/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from '../types';\n\nvar todoList = function todoList() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.ADD_TODO:\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case types.REMOVE_TODOS:\n      var remainingTodos = state.filter(function (todo) {\n        return !todo.checked;\n      });\n      return remainingTodos;\n\n    case types.SELECT_ALL_TODOS:\n      return state.map(function (todo) {\n        return _objectSpread({}, todo, {\n          checked: true\n        });\n      });\n\n    case types.UNSELECT_ALL_TODOS:\n      return state.map(function (todo) {\n        return _objectSpread({}, todo, {\n          checked: false\n        });\n      });\n\n    case types.TOGGLE_CHECKBOX:\n      return state.map(function (todo) {\n        if (todo.todoId === action.payload) {\n          return _objectSpread({}, todo, {\n            checked: !todo.checked\n          });\n        } else return todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todoList;","map":{"version":3,"sources":["/home/evaldas/Desktop/Programming/todo-app/src/reducers/todoList.js"],"names":["types","todoList","state","action","type","ADD_TODO","payload","REMOVE_TODOS","remainingTodos","filter","todo","checked","SELECT_ALL_TODOS","map","UNSELECT_ALL_TODOS","TOGGLE_CHECKBOX","todoId"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACK,QAAX;AACI,0CAAWH,KAAX,IAAkBC,MAAM,CAACG,OAAzB;;AAEJ,SAAKN,KAAK,CAACO,YAAX;AACI,UAAMC,cAAc,GAAGN,KAAK,CAACO,MAAN,CAAc,UAAAC,IAAI,EAAI;AACzC,eAAO,CAACA,IAAI,CAACC,OAAb;AACH,OAFsB,CAAvB;AAGA,aAAOH,cAAP;;AAEJ,SAAKR,KAAK,CAACY,gBAAX;AACI,aAAOV,KAAK,CAACW,GAAN,CAAU,UAAAH,IAAI;AAAA,iCACdA,IADc;AAEjBC,UAAAA,OAAO,EAAE;AAFQ;AAAA,OAAd,CAAP;;AAKJ,SAAKX,KAAK,CAACc,kBAAX;AACI,aAAOZ,KAAK,CAACW,GAAN,CAAU,UAAAH,IAAI;AAAA,iCACdA,IADc;AAEjBC,UAAAA,OAAO,EAAE;AAFQ;AAAA,OAAd,CAAP;;AAKJ,SAAKX,KAAK,CAACe,eAAX;AACI,aAAOb,KAAK,CAACW,GAAN,CAAU,UAAAH,IAAI,EAAI;AACrB,YAAGA,IAAI,CAACM,MAAL,KAAgBb,MAAM,CAACG,OAA1B,EAAkC;AAC9B,mCACOI,IADP;AAEIC,YAAAA,OAAO,EAAE,CAACD,IAAI,CAACC;AAFnB;AAIH,SALD,MAMK,OAAOD,IAAP;AACR,OARM,CAAP;;AAUJ;AACI,aAAOR,KAAP;AAlCR;AAoCH,CArCD;;AAuCA,eAAeD,QAAf","sourcesContent":["import * as types from '../types';\n\nconst todoList = (state = [], action) => {\n    switch (action.type){\n        case types.ADD_TODO:\n            return [...state, action.payload];\n\n        case types.REMOVE_TODOS:\n            const remainingTodos = state.filter( todo => {\n                return !todo.checked;\n            });\n            return remainingTodos;\n\n        case types.SELECT_ALL_TODOS:\n            return state.map(todo => ({\n                ...todo,\n                checked: true\n            }));\n\n        case types.UNSELECT_ALL_TODOS:\n            return state.map(todo => ({\n                ...todo,\n                checked: false\n            }));\n\n        case types.TOGGLE_CHECKBOX:\n            return state.map(todo => {\n                if(todo.todoId === action.payload){\n                    return {\n                        ...todo,\n                        checked: !todo.checked\n                    }\n                }\n                else return todo;\n            });\n\n        default:\n            return state;\n    }\n}\n\nexport default todoList;"]},"metadata":{},"sourceType":"module"}