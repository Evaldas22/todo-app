{"ast":null,"code":"import _classCallCheck from \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/evaldas/Desktop/Programming/ReactApps/todo-app/src/containers/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TodoList from '../../components/TodoList/TodoList';\nimport { addTodo as _addTodo, removeTodos as _removeTodos, selectAllTodos as _selectAllTodos, unselectAllTodos as _unselectAllTodos } from '../../actions';\nimport ControlPanel from '../../components/ControlPanel/ControPanel';\nimport { connect } from 'react-redux';\nvar ID_COUNTER = 4;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    _this.handleAddClick = function () {\n      var newTodo = {\n        todoId: ID_COUNTER++,\n        text: _this.state.inputValue,\n        checked: false // store.dispatch(addTodo(newTodo));\n\n      };\n\n      _this.props.addTodo(newTodo);\n\n      _this.setState({\n        inputValue: ''\n      });\n    };\n\n    _this.handleRemoveClick = function () {\n      // store.dispatch(removeTodos());\n      _this.props.removeTodos();\n\n      _this.setState({\n        allSelected: false\n      });\n    };\n\n    _this.handleSelectClick = function () {\n      // unselect if all selected\n      if (_this.state.allSelected) {\n        // store.dispatch(unselectAllTodos());\n        _this.props.unselectAllTodos();\n      } else {\n        // store.dispatch(selectAllTodos());\n        _this.props.selectAllTodos();\n      }\n\n      _this.setState({\n        allSelected: !_this.state.allSelected\n      });\n    };\n\n    _this.state = {\n      inputValue: '',\n      allSelected: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ControlPanel, {\n        state: this.state,\n        handleChange: this.handleChange,\n        handleAddClick: this.handleAddClick,\n        handleRemoveClick: this.handleRemoveClick,\n        handleSelectClick: this.handleSelectClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        todoList: this.props.todoList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todoList: state.todoList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTodo: function addTodo(todo) {\n      dispatch(_addTodo(todo));\n    },\n    removeTodos: function removeTodos() {\n      dispatch(_removeTodos());\n    },\n    selectAllTodos: function selectAllTodos() {\n      dispatch(_selectAllTodos());\n    },\n    unselectAllTodos: function unselectAllTodos() {\n      dispatch(_unselectAllTodos());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/evaldas/Desktop/Programming/ReactApps/todo-app/src/containers/App/App.js"],"names":["React","Component","TodoList","addTodo","removeTodos","selectAllTodos","unselectAllTodos","ControlPanel","connect","ID_COUNTER","App","props","handleChange","e","setState","inputValue","target","value","handleAddClick","newTodo","todoId","text","state","checked","handleRemoveClick","allSelected","handleSelectClick","todoList","mapStateToProps","mapDispatchToProps","dispatch","todo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from '../../components/TodoList/TodoList';\nimport { addTodo, removeTodos, selectAllTodos, unselectAllTodos } from '../../actions';\nimport ControlPanel from '../../components/ControlPanel/ControPanel';\nimport { connect } from 'react-redux';\n\nlet ID_COUNTER = 4;\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      inputValue: '',\n      allSelected: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  handleAddClick = () => {\n\n    const newTodo = {\n      todoId: ID_COUNTER++,\n      text: this.state.inputValue,\n      checked: false\n    }\n\n    // store.dispatch(addTodo(newTodo));\n    this.props.addTodo(newTodo);\n\n    this.setState({\n      inputValue: ''\n    });\n\n  }\n\n  handleRemoveClick = () => {\n    // store.dispatch(removeTodos());\n    this.props.removeTodos();\n\n    this.setState({\n      allSelected: false\n    })\n  }\n\n  handleSelectClick = () => {\n    // unselect if all selected\n    if(this.state.allSelected){\n      // store.dispatch(unselectAllTodos());\n      this.props.unselectAllTodos();\n    }\n    else{\n      // store.dispatch(selectAllTodos());\n      this.props.selectAllTodos();\n    }\n\n    this.setState({ \n      allSelected: !this.state.allSelected\n    });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <ControlPanel \n          state={this.state} \n          handleChange={this.handleChange} \n          handleAddClick={this.handleAddClick} \n          handleRemoveClick={this.handleRemoveClick}\n          handleSelectClick={this.handleSelectClick}/>\n        <TodoList todoList={this.props.todoList} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ todoList: state.todoList });\n\nconst mapDispatchToProps = dispatch => (\n  {\n    addTodo: (todo) => {dispatch(addTodo(todo))},\n    removeTodos: () => {dispatch(removeTodos())},\n    selectAllTodos: () => {dispatch(selectAllTodos())},\n    unselectAllTodos: () => {dispatch(unselectAllTodos())}\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}